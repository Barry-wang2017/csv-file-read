import os
import pandas as pd
import matplotlib.pyplot as plt

def plot_csv_files(directory, save_directory, skiprows, usecols):
    # Create save directory if it doesn't exist
    if not os.path.exists(save_directory):
        os.makedirs(save_directory)
    
    # List all CSV files in the directory
    files = [f for f in os.listdir(directory) if f.endswith('.csv')]
    
    # Iterate over the files
    for file in files:
        file_path = os.path.join(directory, file)
        print(f"Processing file: {file}")
        
        try:
            # Read the CSV file into a DataFrame
            df = pd.read_csv(file_path, skiprows=skiprows, usecols=usecols)
            
            # Print the first few rows to inspect the structure
            print(df.head())
            
            # Plot the data
            plt.figure()
            ax = df.plot(title=file)
            
            # Label the axes
            ax.set_xlabel('X-axis ms')  # Replace with your actual label
            ax.set_ylabel('Y-axis g')  # Replace with your actual label
            
            # Annotate max and min values
            for column in df.columns:
                max_value = df[column].max()
                min_value = df[column].min()
                max_index = df[column].idxmax()
                min_index = df[column].idxmin()
                
                # Annotate the max value
                ax.annotate(f'Max: {max_value}', xy=(max_index, max_value), xytext=(max_index, max_value + (0.05 * max_value)),
                            arrowprops=dict(facecolor='green', shrink=0.05))
                
                # Annotate the min value
                ax.annotate(f'Min: {min_value}', xy=(min_index, min_value), xytext=(min_index, min_value - (0.05 * min_value)),
                            arrowprops=dict(facecolor='red', shrink=0.05))
            
            # Save the plot as an image in the save_directory
            save_path = os.path.join(save_directory, f"{file}.png")
            plt.savefig(save_path)
            plt.close()
            
            # Optionally, show the plot
            # plt.show()
            
        except pd.errors.ParserError as e:
            print(f"Error parsing {file}: {e}")
        except Exception as e:
            print(f"An error occurred with {file}: {e}")

# Define the directory containing the CSV files
csv_directory = '/Users/barrywang/Documents/Python_work/Read_csv'

# Define the directory where plots will be saved
save_directory = '/Users/barrywang/Documents/Python_work/Save_CSV'

# Define the number of rows to skip at the beginning and the columns to read
skiprows = 8  # Example: skip the first 2 rows
usecols = [1, 2, 3,4]  # Example: read columns with indices 1, 2, and 3

# Call the function to plot the CSV files
plot_csv_files(csv_directory, save_directory, skiprows, usecols)
